plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}


// Create a variable called keystorePropertiesFile, and initialize it to  keystore.properties file,
// in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    namespace 'com.vitorthemyth.kickthehouse'
    compileSdkVersion compile_sdk_version
    buildToolsVersion buildtools_version

    defaultConfig {
        applicationId "com.vitorthemyth.kickthehouse"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode buildVersionCode()
        versionName buildVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])

            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
        }
    }

    // Specifies that flavor is being used to differ "environment"
    flavorDimensions "environment"

    productFlavors {
        prod {
            dimension "environment"
        }
        stage {
            dimension "environment"
            applicationIdSuffix ".stg"
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding(true)
    }

    kapt {
        correctErrorTypes true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //core modules
    implementation project(":core:domain")
    implementation project(":core:use_cases")
    implementation project(":core:components")
    //data modules
    implementation project(":data:persistence")

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:$app_compat_Version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_Version"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    //dagger
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    //glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //splashScreen
    implementation "androidx.core:core-splashscreen:$splash_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_android_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    //in app update
    implementation 'com.google.android.play:app-update-ktx:2.1.0'

    implementation platform("com.google.firebase:firebase-bom:$firebase_version")

    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
}